What if the size of the type String is half a byte


Why half-a-byte? Because by this means using strings can be more efficient than using boolean, int, double, float, char data types in certain circumstances.
Since I'm a newbie in the programming world and I like telling jokes, why not we assume that half a byte existed?

The possiblities are:
0000
0001
0011
0111
1111
0010
0100
0101
0110
1000
1001
1011
1101
1110
1010
1100

There can be various kinds of strings that apparently only a very few of them can be stored in such a way as half-a-byte.
However why not give half-a-byte strings a shot? The above 16 possiblities are good enough for odds.
Let's say there is such a list of strings which has below conditions:
1. the number of the strings is equal to 16;
2. the strings are consisted of only 2 kinds of characters;

0000 => "oooo"
0001 => "ooox"
0011 => "ooxx"
0111 => "oxxx"
1111 => "xxxx"
0010 => "ooxo"
0100 => "oxoo"
0101 => "oxox"
0110 => "oxxo"
1000 => "xooo"
1001 => "xoox"
1011 => "xoxx"
1101 => "xxox"
1110 => "xxxo"
1010 => "xoxo"
1100 => "xxoo"

In this way the Strings can be mapped to corresponding half-bytes. The 0s and 1s can be mapped to 'o's and 'x's.
Then we can perform binary operations which exactly map to strings.

:)